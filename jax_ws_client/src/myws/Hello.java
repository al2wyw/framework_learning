
package myws;

import java.util.concurrent.Future;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.AsyncHandler;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.Response;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "hello", targetNamespace = "http://myws/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface Hello {


    /**
     * 
     * @param arg0
     * @return
     *     returns javax.xml.ws.Response<myws.NameResponse>
     */
    @WebMethod(operationName = "name")
    @RequestWrapper(localName = "name", targetNamespace = "http://myws/", className = "myws.Name")
    @ResponseWrapper(localName = "nameResponse", targetNamespace = "http://myws/", className = "myws.NameResponse")
    public Response<NameResponse> nameAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @param arg0
     * @param asyncHandler
     * @return
     *     returns java.util.concurrent.Future<? extends java.lang.Object>
     */
    @WebMethod(operationName = "name")
    @RequestWrapper(localName = "name", targetNamespace = "http://myws/", className = "myws.Name")
    @ResponseWrapper(localName = "nameResponse", targetNamespace = "http://myws/", className = "myws.NameResponse")
    public Future<?> nameAsync(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0,
        @WebParam(name = "asyncHandler", targetNamespace = "")
        AsyncHandler<NameResponse> asyncHandler);

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "name", targetNamespace = "http://myws/", className = "myws.Name")
    @ResponseWrapper(localName = "nameResponse", targetNamespace = "http://myws/", className = "myws.NameResponse")
    @Action(input = "http://myws/hello/nameRequest", output = "http://myws/hello/nameResponse")
    public String name(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
