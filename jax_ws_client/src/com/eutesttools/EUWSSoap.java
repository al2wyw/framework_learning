
package com.eutesttools;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.4-b01
 * Generated source version: 2.2
 * 
 */
@WebService(name = "EUWSSoap", targetNamespace = "http://www.eutesttools.com")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface EUWSSoap {


    /**
     * Return hello world string
     * 
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "HelloWorld", action = "http://www.eutesttools.com/HelloWorld")
    @WebResult(name = "HelloWorldResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "HelloWorld", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.HelloWorld")
    @ResponseWrapper(localName = "HelloWorldResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.HelloWorldResponse")
    public String helloWorld();

    /**
     * Return your submit string
     * 
     * @param strRequest
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "HelloString", action = "http://www.eutesttools.com/HelloString")
    @WebResult(name = "HelloStringResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "HelloString", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.HelloString")
    @ResponseWrapper(localName = "HelloStringResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.HelloStringResponse")
    public String helloString(
        @WebParam(name = "strRequest", targetNamespace = "http://www.eutesttools.com")
        String strRequest);

    /**
     * Return the sum of two numbers
     * 
     * @param num2
     * @param num1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Add", action = "http://www.eutesttools.com/Add")
    @WebResult(name = "AddResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "Add", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.Add")
    @ResponseWrapper(localName = "AddResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.AddResponse")
    public double add(
        @WebParam(name = "num1", targetNamespace = "http://www.eutesttools.com")
        double num1,
        @WebParam(name = "num2", targetNamespace = "http://www.eutesttools.com")
        double num2);

    /**
     * Return the difference of two numbers
     * 
     * @param num2
     * @param num1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Sub", action = "http://www.eutesttools.com/Sub")
    @WebResult(name = "SubResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "Sub", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.Sub")
    @ResponseWrapper(localName = "SubResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.SubResponse")
    public double sub(
        @WebParam(name = "num1", targetNamespace = "http://www.eutesttools.com")
        double num1,
        @WebParam(name = "num2", targetNamespace = "http://www.eutesttools.com")
        double num2);

    /**
     * Return the product of two numbers
     * 
     * @param num2
     * @param num1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Multiply", action = "http://www.eutesttools.com/Multiply")
    @WebResult(name = "MultiplyResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "Multiply", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.Multiply")
    @ResponseWrapper(localName = "MultiplyResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.MultiplyResponse")
    public double multiply(
        @WebParam(name = "num1", targetNamespace = "http://www.eutesttools.com")
        double num1,
        @WebParam(name = "num2", targetNamespace = "http://www.eutesttools.com")
        double num2);

    /**
     * Return the division of two numbers
     * 
     * @param num2
     * @param num1
     * @return
     *     returns double
     */
    @WebMethod(operationName = "Division", action = "http://www.eutesttools.com/Division")
    @WebResult(name = "DivisionResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "Division", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.Division")
    @ResponseWrapper(localName = "DivisionResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.DivisionResponse")
    public double division(
        @WebParam(name = "num1", targetNamespace = "http://www.eutesttools.com")
        double num1,
        @WebParam(name = "num2", targetNamespace = "http://www.eutesttools.com")
        double num2);

    /**
     * Return the Server Fault string
     * 
     * @param s
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ServerFault", action = "http://www.eutesttools.com/ServerFault")
    @WebResult(name = "ServerFaultResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "ServerFault", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.ServerFault")
    @ResponseWrapper(localName = "ServerFaultResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.ServerFaultResponse")
    public String serverFault(
        @WebParam(name = "s", targetNamespace = "http://www.eutesttools.com")
        String s);

    /**
     * Return the Client Fault string
     * 
     * @param s
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "ClientFault", action = "http://www.eutesttools.com/ClientFault")
    @WebResult(name = "ClientFaultResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "ClientFault", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.ClientFault")
    @ResponseWrapper(localName = "ClientFaultResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.ClientFaultResponse")
    public String clientFault(
        @WebParam(name = "s", targetNamespace = "http://www.eutesttools.com")
        String s);

    /**
     * Return the VersionMismatch Fault string
     * 
     * @param s
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "VersionMismatchFault", action = "http://www.eutesttools.com/VersionMismatchFault")
    @WebResult(name = "VersionMismatchFaultResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "VersionMismatchFault", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.VersionMismatchFault")
    @ResponseWrapper(localName = "VersionMismatchFaultResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.VersionMismatchFaultResponse")
    public String versionMismatchFault(
        @WebParam(name = "s", targetNamespace = "http://www.eutesttools.com")
        String s);

    /**
     * Return the MustUnderstand Fault string
     * 
     * @param s
     * @return
     *     returns java.lang.String
     */
    @WebMethod(operationName = "MustUnderstandFault", action = "http://www.eutesttools.com/MustUnderstandFault")
    @WebResult(name = "MustUnderstandFaultResult", targetNamespace = "http://www.eutesttools.com")
    @RequestWrapper(localName = "MustUnderstandFault", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.MustUnderstandFault")
    @ResponseWrapper(localName = "MustUnderstandFaultResponse", targetNamespace = "http://www.eutesttools.com", className = "com.eutesttools.MustUnderstandFaultResponse")
    public String mustUnderstandFault(
        @WebParam(name = "s", targetNamespace = "http://www.eutesttools.com")
        String s);

}
